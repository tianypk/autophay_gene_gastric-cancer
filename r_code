setwd("E:\\LTW2\\autophy_related_gene\\gastric_TCGA")
library(GSVA)
library(GSVAdata)
data(c2BroadSets)
################################################

##discovery data
TCGA_clin=read.csv("TCGA_clin_del_6month_dfs.csv",head=TRUE,row.names=1)
TCGA_clin_n=na.omit(TCGA_clin[,c(6,7)])
dim(TCGA_clin_n)
head(TCGA_clin_n)

###TCGA  data
TCGA_exp=read.csv("TCGA_ATG.csv",head=TRUE,row.names=1)
dim(TCGA_exp)

index=intersect(rownames(TCGA_clin_n),colnames(TCGA_exp))
length(index)
TCGA_dis=TCGA_exp[,index]
# load("TCGA_G_mRNA.Rdata")
# TCGA_dis=TCGA_G_mRNA
dim(TCGA_dis)
TCGA_dis[1:3,1:3]


# BiocManager::install("glmnet")
library(glmnet)
library(survival)
x=t(TCGA_dis)
y=Surv(TCGA_clin_n$DFS_MONTHS, TCGA_clin_n$DFS_STATUS)
set.seed(1000)
#DF = as.matrix(as.data.frame(lapply(x, as.numeric)))
#fit <- glmnet(x, y, family="cox")
cv.fit =cv.glmnet(x, y, family="cox")
#plot(fit)
plot(cv.fit)
cv.fit$lambda.min
# coef(cv.fit, s = "lambda.min")
#cv.fit$lambda.lse
#coef(cv.fit, s = "lambda.lse")
coef= coef(cv.fit, s = "lambda.min") 
TCGA_dis_model=TCGA_dis[coef@i+1,] ##generate the data matrix with the non-zero coeffient.
dim(TCGA_dis_model)
sel=rownames(TCGA_dis_model)
sel
i=length(coef@x)
tt=data.frame(sel,coef@x)
# write.table(tt,file=("probe_and_index.xls"),sep="\t",quote=F)
i
#######################也可以用一下代码来导出非0系数及探针#########
results=predict(cv.fit,s="lambda.min",type="coefficients")
choicpred=rownames(results)[which(results !=0)]
summary(results)
results@x
###############################################################

dim(TCGA_dis_model)
TCGA_dis_model[1:3,1:3]
TCGA_dis_model_score=t(TCGA_dis_model)
i
for (i in seq(1:i)){
cat(paste0("TCGA_dis_model_score[,",i,"]*coef@x[",i,"]+"))}
score=TCGA_dis_model_score[,1]*coef@x[1]+TCGA_dis_model_score[,2]*coef@x[2]+TCGA_dis_model_score[,3]*coef@x[3]+TCGA_dis_model_score[,4]*coef@x[4]+TCGA_dis_model_score[,5]*coef@x[5]+TCGA_dis_model_score[,6]*coef@x[6]+TCGA_dis_model_score[,7]*coef@x[7]+TCGA_dis_model_score[,8]*coef@x[8]+TCGA_dis_model_score[,9]*coef@x[9]+TCGA_dis_model_score[,10]*coef@x[10]+TCGA_dis_model_score[,11]*coef@x[11]+TCGA_dis_model_score[,12]*coef@x[12]+TCGA_dis_model_score[,13]*coef@x[13]+TCGA_dis_model_score[,14]*coef@x[14]+TCGA_dis_model_score[,15]*coef@x[15]+TCGA_dis_model_score[,16]*coef@x[16]+TCGA_dis_model_score[,17]*coef@x[17]+TCGA_dis_model_score[,18]*coef@x[18]+TCGA_dis_model_score[,19]*coef@x[19]+TCGA_dis_model_score[,20]*coef@x[20]+TCGA_dis_model_score[,21]*coef@x[21]+TCGA_dis_model_score[,22]*coef@x[22] 
#########################################
data2plot <- as.data.frame(cbind(TCGA_clin_n,score))
data2plot$quart <- cut(as.numeric(as.character(data2plot[,3])),breaks=quantile(as.numeric(as.character(data2plot[,3])), c(0, 0.5, 1), na.rm=T),labels=c("low", "high"),include.lowest=TRUE)
ss=Surv(data2plot[,2], data2plot[,1])
plot(survfit(ss~data2plot$quart), col=c("steelblue","tomato2"),mark.time=TRUE,
main="Figure: Survival analysis(GSEGSE17536)", cex.main=.9, xlab="Recurrence Free Survival [months]", ylab="Survival Probability",
lwd=3,las=1)
cox = summary(coxph(ss~data2plot$quart))
pvalue=cox$sctest['pvalue'];
hr = round(cox$conf.int[1],2)
hr_left = round(cox$conf.int[3],2)
hr_right = round(cox$conf.int[4],2)
conf_int =  paste(" (", hr_left, " - ", hr_right, ")", sep=""); 
txt = paste("HR = ", hr, conf_int, "\nlogrank P = ", signif(pvalue, 2), sep="")
text(grconvertX(0.98, "npc"), grconvertY(.97, "npc"),
labels=txt, adj=c(1, 1))
list(pvalue, hr, hr_left, hr_right)
legendtext = paste(levels(data2plot$quart),": ",table(data2plot$quart), "(",table(data2plot$quart[data2plot$STATUS==1]),")",sep="")
legend("bottomleft",col=c("steelblue","tomato2"), legend=legendtext,lty=1,lwd=3)
write.table(data2plot,file=("GSE17536.xls"),sep="\t",quote=F)

########load another dataset-GSE62254 data
GSE62254_exp=read.csv("GSE62254_ATG.csv",head=TRUE,row.names=1)
dim(GSE62254_exp)
GSE62254_clin=read.csv("GSE62254_clin.csv",head=TRUE,row.names=1)
dim(GSE62254_clin)
GSE62254_clin_n=GSE62254_clin[colnames(GSE62254_exp),]
all(rownames(GSE62254_clin_n)==colnames(GSE62254_exp))

GSE33113=GSE62254_exp
GSE33113_model=GSE33113[sel,] ##generate the data matrix with the non-zero coeffient.
dim(GSE33113_model)
(GSE33113_model)[1:5,1:5]

GSE33113_model_score=t(GSE33113_model)

i
for (i in seq(1:i)){
cat(paste0("GSE33113_model_score[,",i,"]*coef@x[",i,"]+"))}
score=GSE33113_model_score[,1]*coef@x[1]+GSE33113_model_score[,2]*coef@x[2]+GSE33113_model_score[,3]*coef@x[3]+GSE33113_model_score[,4]*coef@x[4]+GSE33113_model_score[,5]*coef@x[5]+GSE33113_model_score[,6]*coef@x[6]+GSE33113_model_score[,7]*coef@x[7]+GSE33113_model_score[,8]*coef@x[8]+GSE33113_model_score[,9]*coef@x[9]+GSE33113_model_score[,10]*coef@x[10]+GSE33113_model_score[,11]*coef@x[11]+GSE33113_model_score[,12]*coef@x[12]+GSE33113_model_score[,13]*coef@x[13]+GSE33113_model_score[,14]*coef@x[14]+GSE33113_model_score[,15]*coef@x[15]+GSE33113_model_score[,16]*coef@x[16]+GSE33113_model_score[,17]*coef@x[17]+GSE33113_model_score[,18]*coef@x[18]+GSE33113_model_score[,19]*coef@x[19]+GSE33113_model_score[,20]*coef@x[20]+GSE33113_model_score[,21]*coef@x[21]+GSE33113_model_score[,22]*coef@x[22]
data2plot <- as.data.frame(cbind(GSE62254_clin_n,score))
data2plot=data2plot[,c(5:7)]

data2plot$quart <- cut(as.numeric(as.character(data2plot[,3])),breaks=quantile(as.numeric(as.character(data2plot[,3])), c(0, 0.5, 1), na.rm=T),labels=c("low", "high"),include.lowest=TRUE)
ss=Surv(data2plot[,1], data2plot[,2])
plot(survfit(ss~data2plot$quart), col=c("steelblue","tomato2"),
main="Figure: Survival analysis(GSE33113)", cex.main=.9, xlab="Recurrence Free Survival [months]", ylab="Survival Probability",
lwd=3,las=1)
cox = summary(coxph(ss~data2plot$quart))
pvalue=cox$sctest['pvalue'];
hr = round(cox$conf.int[1],2)
hr_left = round(cox$conf.int[3],2)
hr_right = round(cox$conf.int[4],2)
conf_int =  paste(" (", hr_left, " - ", hr_right, ")", sep=""); 
txt = paste("HR = ", hr, conf_int, "\nlogrank P = ", signif(pvalue, 2), sep="")
text(grconvertX(0.98, "npc"), grconvertY(.97, "npc"),
labels=txt, adj=c(1, 1))
list(pvalue, hr, hr_left, hr_right)
legendtext = paste(levels(data2plot$quart),": ",table(data2plot$quart), "(",table(data2plot$quart[data2plot$STATUS==1]),")",sep="")
legend("bottomleft",col=c("steelblue","tomato2"), legend=legendtext,lty=1,lwd=3)
# write.table(data2plot,file=("GSE33113.xls"),sep="\t",quote=F)
#########################################################################

########load another dataset-GSE14659 data  略


#####nomgram
library(foreign)
library(survival)
library(rms)    ####目前只能用r 3.6.2
TCGA_NOM=read.csv("TCGA_clin_quart.csv",head=TRUE,row.names=1)
colnames(TCGA_NOM)
TCGA_NOM_N=TCGA_NOM[,c(6,7,9,18,19)]
dim(TCGA_NOM_N)

TCGA_NOM_N=na.omit(TCGA_NOM_N)
head(TCGA_NOM_N)
coxm<- cph(Surv(DFS_MONTHS, DFS_STATUS) ~  +score+ stage_txl, x=T, y=T, surv=T, data=TCGA_NOM_N)
# summary(coxm)
scoxm=step(coxm)
dd=datadist(TCGA_NOM_N)
options(datadist="dd")
surv <- Survival(coxm)
surv1= function(x) surv(3*12,lp=x)
surv2= function(x) surv(5*12,lp=x)
surv3= function(x) surv(7*12,lp=x)

nom <- nomogram(coxm, fun=list(surv1,surv2,surv3), 
                lp=F, funlabel=c("3-year survival", "5-year survival","7-year survival"), 
                maxscale=100, fun.at=c(0.95, 0.9, 0.85, 0.8, 0.75, 0.7, 0.6, 0.5)
                )  
plot(nom)
##################
f=coxm
# Internal validation 
# discrimination C-index
validate(f, method="boot", B=1000, dxy=T)
rcorrcens(Surv(time, status) ~ predict(f), data = GSE62254_NOM)
# calibration: calibration curve
f3= cph(Surv(time, status) ~ Eight_mRNA_signature_classifer+  AGCC_stage+ LNR+ Lauren_classification+ Age,
 x=T, y=T, surv=T, data=GSE62254_NOM)

cal3 <- calibrate(f3, cmethod="KM", method="boot", u=36, m=60, B=1000)
plot(cal3,cex.subtitles=.75,xlim=c(0.4,1),ylim=c(0.4,1),conf.int=TRUE, col="red",subtitles=TRUE)




